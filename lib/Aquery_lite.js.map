{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./lib/dom_node_collection.js","webpack:///./lib/main.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;ACnEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,0BAA0B;AAC7C;AACA,qBAAqB,IAAI;AACzB;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,0BAA0B;AAC7C;AACA,qBAAqB,qBAAqB;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,0BAA0B;AAC7C;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;AACA;;;AAGA;;AAEA;;;;;;;;;;;;AC3HA;;;AAGA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA,qBAAqB;AACrB,mBAAmB;AACnB,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA,uBAAuB,0BAA0B;AACjD;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,KAAK,GAAG,UAAU;AACrC;AACA;AACA;AACA;;AAEA","file":"./lib/Aquery_lite.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./lib/main.js\");\n","class DomNodeCollection {\n\n  constructor(arr){\n    this.elements = arr;\n  }\n\n  html(str) {\n    if (typeof str === 'undefined') {\n      return this.elements[0].innerHTML;\n    }\n    this.elements.forEach( (el) => {\n      el.innerHTML = str;\n    });\n  }\n\n  empty() {\n    this.html(\"\");\n  }\n\n  append(args) {\n    if (args instanceof HTMLElement) {\n      for (let i = 0; i < this.elements.length; i++) {\n          this.elements[i].innerHTML += args.outerHTML;\n      }\n    }\n    else if (typeof args === \"string\") {\n      for (let i = 0; i < this.elements.length; i++) {\n        this.elements[i].innerHTML += args;\n      }\n    }\n    else {\n      for (let i = 0; i < this.elements.length; i++) {\n        for (let j=0; j < args.elements.length; j++) {\n          this.elements[i].innerHTML += args.elements[j].outerHTML;\n        }\n      }\n    }\n  }\n\n  attr(reader, setter){\n    if (setter === undefined) {\n      return this.elements[0].getAttribute( reader );\n    }\n    else {\n      for (var i = 0; i < this.elements.length; i++) {\n        this.elements[i].setAttribute(reader, setter);\n      }\n      return this;\n    }\n  }\n\n  addClass(arg) {\n    for (let i = 0; i < this.elements.length; i++) {\n      let classes = this.elements[i].getAttribute('class');\n      classes += ` ${arg}`;\n      this.elements[i].setAttribute('class', classes);\n    }\n    return this;\n  }\n\n  removeClass(arg) {\n    for (let i = 0; i < this.elements.length; i++) {\n      let classes = this.elements[i].getAttribute('class');\n      classes = classes.split(' ');\n      classes = classes.filter( (el) => !(el === arg));\n      this.elements[i].setAttribute('class', classes);\n    }\n    return this;\n  }\n\n  children() {\n    let dom = new DomNodeCollection([]);\n    for (let i = 0; i < this.elements.length; i++) {\n      let children = this.elements[i].children;\n      for (let j = 0; j < children.length; j++) {\n        dom.elements.push(children[j]);\n      }\n    }\n    return dom;\n  }\n\n  parent() {\n    let dom = new DomNodeCollection([]);\n    for (var i = 0; i < this.elements.length; i++) {\n      dom.elements.push(this.elements[i].parentElement);\n    }\n    return dom;\n  }\n\n  find(arg) {\n    let dom = new DomNodeCollection([]);\n    for (var i = 0; i < this.elements.length; i++) {\n      let collection = this.elements[i].querySelectorAll(arg);\n      for (let j=0; j < collection.length; j++){\n        dom.elements.push(collection[j]);\n      }\n    }\n\n    return dom;\n  }\n\n\n  remove() {\n    this.elements.forEach( el => el.outerHTML = \"\");\n    this.elements = [];\n  }\n\n  on(e, cb) {\n    for (let i = 0; i < this.elements.length; i++) {\n      this.elements[i].addEventListener(e, cb);\n      this.elements[i].callback = cb;\n    }\n  }\n\n  off(e) {\n    for (let i = 0; i < this.elements.length; i++) {\n      this.elements[i].removeEventListener(e, this.elements[i].callback);\n    }\n  }\n\n\n}\n\nmodule.exports = DomNodeCollection;\n","const DomNodeCollection = require(\"./dom_node_collection.js\");\n\n\nlet $l = function(arg) {\n  if (arg instanceof HTMLElement) {\n    let argsArray = Array.from(arg);\n    return new DomNodeCollection(argsArray);\n  } else if (typeof arg === 'function') {\n    registerDocReadyCallback(arg);\n  } else {\n    let nodeList = document.querySelectorAll(arg);\n    let nodeArray = Array.from(nodeList);\n    return new DomNodeCollection(nodeArray);\n  }\n};\n\nconst docReadyCallbacks = [];\nlet docReady = false;\n\nconst registerDocReadyCallback = (callback) => {\n  if (!docReady) {\n    docReadyCallbacks.push(callback);\n  } else {\n    callback();\n  }\n};\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  docReady = true;\n  docReadyCallbacks.forEach(callback => callback());\n});\n\n$l.extend = (baseObj, ...otherObjs) => {\n  otherObjs.forEach( obj => {\n    if (typeof obj === 'object') {\n      for (const key in obj) {\n        baseObj[key] = obj[key];\n      }\n    }\n  });\n  return baseObj;\n};\n\n$l.ajax = (options) => {\n  const vanillaRequest = new XMLHttpRequest();\n  const defaults = {\n    contentType: 'application/x-www-form-urlencoded; charset=UTF-8',\n    method: \"GET\",\n    url: \"\",\n    success: () => {},\n    error: () => {},\n    data: {},\n  };\n\n  options = $l.extend(defaults, options);\n  options.method = options.method.toUpperCase();\n\n  if (options.method === \"GET\") {\n    options.url += `?${QueryString(options.data)}`;\n  }\n\n  vanillaRequest.open(options.method, options.url, true);\n\n  vanillaRequest.onload = (e) => {\n    if (vanillaRequest.status === 200) {\n      options.success(vanillaRequest.response);\n    } else {\n      options.error(vanillaRequest.response);\n    }\n  };\n\n  vanillaRequest.send(JSON.stringify(options.data));\n};\n\nconst QueryString = (obj) => {\n  let result = \"\";\n  for (const prop in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n      result += `${prop}=${obj[prop]}&`;\n    }\n  }\n  return result.substring(0, result.length - 1);\n};\n\nwindow.$l = $l;\n"],"sourceRoot":""}